# -*- coding: utf-8 -*-
"""hobbies.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19fc58zLYbWf3aco23ZHRqdlBzRnbBiXx
"""



from google.colab import drive
drive.mount('/content/drive')

!pip install PyPDF2

!sudo apt install build-essential libpoppler-cpp-dev pkg-config python3-dev

!pip install pdftotext

!cp -rv /content/drive/MyDrive/dataset .

import PyPDF2
import spacy
from spacy.matcher import Matcher
import pdftotext
import pandas as pd
import os

! python -m spacy download en_core_web_sm

path='/content/dataset' #file path for corpus
files = [os.path.join (path, f) for f in os.listdir(path) if os.path.isfile(os.path.join(path, f))]
pdfs = []
for i in files:
    pdfs.append(i)

merger = PyPDF2.PdfFileMerger(strict=False)

for pdf in pdfs:
    merger.append(pdf)

merger.write("final.pdf")

with open("final.pdf", "rb") as f:
    pdf = pdftotext.PDF(f)

finalpg=[]
for page in pdf:
    pg=page.strip()
    finalpg.append(pg)
print(finalpg[2])

nlp = spacy.load("en_core_web_sm")
doc = nlp(finalpg[0])


for token in doc:
    print(token.text, token.lemma_, token.pos_, token.tag_, token.dep_,
            token.shape_, token.is_alpha, token.is_stop)

temp = """3D printing
Acting
Aeromodeling
Air sports
Airbrushing
Aircraft Spotting
Airsoft
Airsofting
Amateur astronomy
Amateur geology
Amateur Radio
American football
Animal fancy
Animals/pets/dogs
Antiquing
Antiquities
Aqua-lung
Aquarium (Freshwater & Saltwater)
Archery
Art collecting
Arts
Association football
Astrology
Astronomy
Audiophilia
Australian rules football
Auto audiophilia
Auto racing
Backgammon
Backpacking
Badminton
Base Jumping
Baseball
Basketball
Baton Twirling
Beach Volleyball
Beach/Sun tanning
Beachcombing
Beadwork
Beatboxing
Becoming A Child Advocate
Beekeeping
Bell Ringing
Belly Dancing
Bicycle Polo
Bicycling
Billiards
Bird watching
Birding
Birdwatching
Blacksmithing
Blogging
BMX
Board games
Board sports
BoardGames
Boating
Body Building
Bodybuilding
Bonsai Tree
Book collecting
Bookbinding
Boomerangs
Bowling
Boxing
Brazilian jiu-jitsu
Breakdancing
Brewing Beer
Bridge
Bridge Building
Bringing Food To The Disabled
Building A House For Habitat For Humanity
Building Dollhouses
Bus spotting
Butterfly Watching
Button Collecting
Cake Decorating
Calligraphy
Camping
Candle making
Canoeing
Car Racing
Card collecting
Cartooning
Casino Gambling
Cave Diving
Ceramics
Cheerleading
Chess
Church/church activities
Cigar Smoking
Climbing
Cloud Watching
Coin Collecting
Collecting
Collecting Antiques
Collecting Artwork
Collecting Hats
Collecting Music Albums
Collecting RPM Records
Collecting Sports Cards (Baseball, Football, Basketball, Hockey)
Collecting Swords
Color guard
Coloring
Comic book collecting
Compose Music
Computer activities
Computer programming
Conworlding
Cooking
Cosplay
Cosplaying
Couponing
Crafts
Crafts (unspecified)
Creative writing
Cricket
Crochet
Crocheting
Cross-Stitch
Crossword Puzzles
Cryptography
Curling
Cycling
Dance
Dancing
Darts
Debate
Deltiology (postcard collecting)
Diecast Collectibles
Digital arts
Digital Photography
Disc golf
Do it yourself
Dodgeball
Dog sport
Dolls
Dominoes
Dowsing
Drama
Drawing
Driving
Dumpster Diving
Eating out
Educational Courses
Electronics
Element collecting
Embroidery
Entertaining
Equestrianism
Exercise (aerobics, weights)
Exhibition drill
Falconry
Fast cars
Felting
Fencing
Field hockey
Figure skating
Fire Poi
Fishing
Fishkeeping
Flag Football
Floorball
Floral Arrangements
Flower arranging
Flower collecting and pressing
Fly Tying
Flying
Footbag
Football
Foraging
Foreign language learning
Fossil hunting
Four Wheeling
Freshwater Aquariums
Frisbee Golf – Frolf
Gambling
Games
Gaming (tabletop games and role-playing games)
Garage Saleing
Gardening
Genealogy
Geocaching
Ghost hunting
Glassblowing
Glowsticking
Gnoming
Go
Go Kart Racing
Going to movies
Golf
Golfing
Gongoozling
Graffiti
Grip Strength
Guitar
Gun Collecting
Gunsmithing
Gymnastics
Gyotaku
Handball
Handwriting Analysis
Hang gliding
Herping
Hiking
Home Brewing
Home Repair
Home Theater
Homebrewing
Hooping
Horse riding
Hot air ballooning
Hula Hooping
Hunting
Ice hockey
Ice skating
Iceskating
Illusion
Impersonations
Inline skating
Insect collecting
Internet
Inventing
Jet Engines
Jewelry Making
Jigsaw Puzzles
Jogging
Judo
Juggling
Jukskei
Jump Roping
Kabaddi
Kart racing
Kayaking
Keep A Journal
Kitchen Chemistry
Kite Boarding
Kite flying
Kites
Kitesurfing
Knapping
Knife making
Knife throwing
Knitting
Knotting
Lacemaking
Lacrosse
Lapidary
LARPing
Laser tag
Lasers
Lawn Darts
Learn to Play Poker
Learning A Foreign Language
Learning An Instrument
Learning To Pilot A Plane
Leather crafting
Leathercrafting
Lego building
Legos
Letterboxing
Listening to music
Locksport
Machining
Macramé
Macrame
Magic
Mahjong
Making Model Cars
Marbles
Marksmanship
Martial arts
Matchstick Modeling
Meditation
Metal detecting
Meteorology
Microscopy
Mineral collecting
Model aircraft
Model building
Model Railroading
Model Rockets
Modeling Ships
Models
Motor sports
Motorcycles
Mountain Biking
Mountain Climbing
Mountaineering
Movie and movie memorabilia collecting
Mushroom hunting/Mycology
Musical Instruments
Nail Art
Needlepoint
Netball
Nordic skating
Orienteering
Origami
Owning An Antique Car
Paintball
Painting
Papermache
Papermaking
Parachuting
Paragliding or Power Paragliding
Parkour
People Watching
Photography
Piano
Pigeon racing
Pinochle
Pipe Smoking
Planking
Playing music
Playing musical instruments
Playing team sports
Poker
Pole Dancing
Polo
Pottery
Powerboking
Protesting
Puppetry
Puzzles
Pyrotechnics
Quilting
R/C Boats
R/C Cars
R/C Helicopters
R/C Planes
Racing Pigeons
Racquetball
Radio-controlled car racing
Rafting
Railfans
Rappelling
Rapping
Reading
Reading To The Elderly
Record collecting
Relaxing
Renaissance Faire
Renting movies
Rescuing Abused Or Abandoned Animals
Robotics
Rock balancing
Rock climbing
Rock Collecting
Rockets
Rocking AIDS Babies
Roleplaying
Roller derby
Roller skating
Rugby
Rugby league football
Running
Sailing
Saltwater Aquariums
Sand art
Sand Castles
Scrapbooking
Scuba diving
Sculling or Rowing
Sculpting
Sea glass collecting
Seashell collecting
Self Defense
Sewing
Shark Fishing
Shooting
Shooting sport
Shopping
Shortwave listening
Singing
Singing In Choir
Skateboarding
Skating
Skeet Shooting
Sketching
Skiing
Skimboarding
Sky Diving
Skydiving
Slack Lining
Slacklining
Sleeping
Slingshots
Slot car racing
Snorkeling
Snowboarding
Soap Making
Soapmaking
Soccer
Socializing with friends/neighbors
Speed Cubing (rubix cube)
Speed skating
Spelunkering
Spending time with family/kids
Sports
Squash
Stamp Collecting
Stand-up comedy
Stone collecting
Stone skipping
Storm Chasing
Storytelling
String Figures
Sudoku
Surf Fishing
Surfing
Survival
Swimming
Table football
Table tennis
Taekwondo
Tai chi
Tatting
Taxidermy
Tea Tasting
Tennis
Tesla Coils
Tetris
Textiles
Texting
Tombstone Rubbing
Tool Collecting
Tour skating
Toy Collecting
Train Collecting
Train Spotting
Trainspotting
Traveling
Treasure Hunting
Trekkie
Triathlon
Tutoring Children
TV watching
Ultimate Frisbee
Urban exploration
Vehicle restoration
Video game collecting
Video Games
Video gaming
Videophilia
Vintage cars
Violin
Volleyball
Volunteer
Walking
Warhammer
Watching movies
Watching sporting events
Water sports
Weather Watcher
Web surfing
Weightlifting
Windsurfing
Wine Making
Wingsuit Flying
Wood carving
Woodworking
Working In A Food Pantry
Working on cars
World Record Breaking
Worldbuilding
Wrestling
Writing
Writing Music
Writing Songs
Yo-yoing
Yoga
YoYo
Ziplining
Zumba"""

#tmp= """ Achievements
#Skills
#Education
#Experience
#Projects
#objective
#"""

nlp_text=nlp(finalpg[6])

tokens = [token.text for token in nlp_text if not token.is_stop]
for j,i in enumerate(tokens):
  if i.lower()=='hobbies':
    j+=1
    x=tokens[j]
    ans=''
    while (j<len(tokens) or x!='\n'):
      if (nlp(x)[0].pos_ in ['NOUN','VERB'] or x.lower() in temp.lower()):
        ans=ans+x+' '
        if x=='\n':
          break
        if j<len(tokens) and nlp(tokens[j])[0].pos_ == 'SPACE':
          j+=1
        if x=='\n':
          break
        if (nlp(x)[0].pos_=='NOUN' or nlp(x)[0].pos_=='VERB') and j<len(tokens) and nlp(tokens[j])[0].pos_ not in ['NOUN','SPACE','PUNCT']:
          ans=ans+ ','
      j+=1
      if j>=len(tokens) or x=='\n':
        break
      x=tokens[j]
    ans=ans.replace(' ,',',')
    print(ans)
    
    break